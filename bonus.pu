@startuml GAMES
actor Player

participant ClientSite
participant UniversalAPI_Server
participant LobbyBFF
participant UniversalAPI_Games

note over of Player
  Este es tu jugador
end note
' ClientSite solicita la lista de juegos disponibles a UniversalAPI_Games
ClientSite -> LobbyBFF: **Games** \n<font color=gray>(clientAuth - client)</font>\n
activate LobbyBFF
LobbyBFF --> ClientSite: List of Games\n<font color=gray>Games data JSON</font>\n 
deactivate LobbyBFF

' El ClientSite llama al mÃ©todo createToken
Player -> ClientSite: Login Request
Activate ClientSite
ClientSite [#green]-> ClientSite: Login Ok
ClientSite -> Player: UserLogged
deactivate ClientSite

ClientSite --> UniversalAPI_Server: **YsetUser**  \n<font color=gray>to create user </font>\n
Activate UniversalAPI_Server
UniversalAPI_Server --> ClientSite: User created
UniversalAPI_Server -[#red]-> ClientSite: Error: f.e. user exists
deactivate UniversalAPI_Server

ClientSite --> UniversalAPI_Server: **YStartSession**  \n<font color=gray>authenticate user </font>\n
Activate UniversalAPI_Server
UniversalAPI_Server --> ClientSite: return utoken
UniversalAPI_Server -[#red]-> ClientSite: Error: f.e. user exists
deactivate UniversalAPI_Server

' El ClientSite usa el token para autenticar en el LobbyBFF
ClientSite -> LobbyBFF: **authInGame(utoken)**
Activate LobbyBFF
LobbyBFF --> ClientSite: return gameToken JSON
deactivate LobbyBFF


' El ClientSite usa el newToken para lanzar el juego en el LobbyBFF
ClientSite -> UniversalAPI_Games: **launch** \n<font color=gray>(gameToken)</font>\n
Activate UniversalAPI_Games

UniversalAPI_Games --> ClientSite:  return game data \n<font color=gray>(IFRAME or URL)</font>\n
deactivate UniversalAPI_Games

ClientSite --> Player: **Show Game**



@enduml

